{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joshb\\\\desktop\\\\lambdaProjects\\\\front-end\\\\potluck\\\\src\\\\Components\\\\Registration.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport * as yup from \"yup\";\nimport React, { useState, useEffect } from \"react\"; // form\n// username\n// first name\n// last name\n// password\n// submit button\n// nice to have -- form validation\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Registration(props) {\n  _s();\n\n  const initialFormErrors = {\n    username: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    password: \"\"\n  };\n  const [registerErr, setRegisterErr] = useState(initialFormErrors);\n  const [userData, setUserData] = useState({\n    username: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    password: \"\"\n  });\n  const registerSchema = yup.object().shape({\n    username: yup.string().trim().required(\"Username is required\").min(3, \"Username must be at least 3 characters long\"),\n    first_name: yup.string().trim().required(\"Must enter your first name\"),\n    last_name: yup.string().trim().required(\"Must enter your last name\"),\n    password: yup.string().trim().required(\"Must enter a password\").min(8, \"Password is too short, should be minimum 8 characters long\").matches(/^.*(?=.{8,})((?=.*[!@#$%^&*()\\-_=+{};:,<.>]){1})(?=.*\\d)((?=.*[a-z]){1})((?=.*[A-Z]){1}).*$/, \"Password must contain at least 8 characters, one uppercase, one number and one special case character\")\n  });\n\n  const handleChange = evt => {\n    return setUserData(...userData, {\n      [evt.target.name]: evt.target.value\n    });\n  };\n\n  console.log(userData); //   const handleSubmit = (evt) => {\n  //     evt.preventDefault();\n  //     const { username, first_name, last_name, password } = userData;\n  //     axios\n  //       .post(\n  //         url,\n  //         {\n  //           user: {\n  //             username: username,\n  //             first_name: first_name,\n  //             last_name: last_name,\n  //             password: password,\n  //           },\n  //         },\n  //         { withCredentials: true }\n  //       )\n  //       .then((resp) => {\n  //         return console.log(\"registration response\", resp.data);\n  //       })\n  //       .catch((err) => {\n  //         console.log(\"registration error\", err);\n  //       });\n  //   };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        value: userData.username,\n        placeholder: \"Create Username\",\n        name: \"username\",\n        type: \"text\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        value: userData.first_name,\n        placeholder: \"Enter first name\",\n        name: \"first_name\",\n        type: \"text\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        value: userData.last_name,\n        placeholder: \"Enter last name\",\n        name: \"last_name\",\n        type: \"text\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        value: userData.password,\n        placeholder: \"Create a password\",\n        name: \"password\",\n        type: \"password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Registration, \"U8JRXTYHz/8bFQadiUt2M9yhsBY=\");\n\n_c = Registration;\nexport default Registration; // form\n// username\n// first name\n// last name\n// password\n// submit button\n// nice to have -- form validation\n\nvar _c;\n\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"sources":["C:/Users/joshb/desktop/lambdaProjects/front-end/potluck/src/Components/Registration.js"],"names":["axios","yup","React","useState","useEffect","Registration","props","initialFormErrors","username","first_name","last_name","password","registerErr","setRegisterErr","userData","setUserData","registerSchema","object","shape","string","trim","required","min","matches","handleChange","evt","target","name","value","console","log"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport * as yup from \"yup\";\nimport React, { useState, useEffect } from \"react\";\n// form\n// username\n// first name\n// last name\n// password\n// submit button\n// nice to have -- form validation\n\nfunction Registration(props) {\n  const initialFormErrors = {\n    username: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    password: \"\",\n  };\n\n  const [registerErr, setRegisterErr] = useState(initialFormErrors);\n  const [userData, setUserData] = useState({\n    username: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    password: \"\",\n  });\n\n  const registerSchema = yup.object().shape({\n    username: yup\n      .string()\n      .trim()\n      .required(\"Username is required\")\n      .min(3, \"Username must be at least 3 characters long\"),\n    first_name: yup.string().trim().required(\"Must enter your first name\"),\n    last_name: yup.string().trim().required(\"Must enter your last name\"),\n    password: yup\n      .string()\n      .trim()\n      .required(\"Must enter a password\")\n      .min(8, \"Password is too short, should be minimum 8 characters long\")\n      .matches(\n        /^.*(?=.{8,})((?=.*[!@#$%^&*()\\-_=+{};:,<.>]){1})(?=.*\\d)((?=.*[a-z]){1})((?=.*[A-Z]){1}).*$/,\n        \"Password must contain at least 8 characters, one uppercase, one number and one special case character\"\n      ),\n  });\n\n  const handleChange = (evt) => {\n    return setUserData(...userData, { [evt.target.name]: evt.target.value });\n  };\n  console.log(userData);\n  //   const handleSubmit = (evt) => {\n  //     evt.preventDefault();\n  //     const { username, first_name, last_name, password } = userData;\n  //     axios\n  //       .post(\n  //         url,\n  //         {\n  //           user: {\n  //             username: username,\n  //             first_name: first_name,\n  //             last_name: last_name,\n  //             password: password,\n  //           },\n  //         },\n  //         { withCredentials: true }\n  //       )\n  //       .then((resp) => {\n  //         return console.log(\"registration response\", resp.data);\n  //       })\n  //       .catch((err) => {\n  //         console.log(\"registration error\", err);\n  //       });\n  //   };\n\n  return (\n    <form>\n      <div>\n        <input\n          onChange={handleChange}\n          value={userData.username}\n          placeholder=\"Create Username\"\n          name=\"username\"\n          type=\"text\"\n          required\n        ></input>\n        <input\n          onChange={handleChange}\n          value={userData.first_name}\n          placeholder=\"Enter first name\"\n          name=\"first_name\"\n          type=\"text\"\n          required\n        ></input>\n        <input\n          onChange={handleChange}\n          value={userData.last_name}\n          placeholder=\"Enter last name\"\n          name=\"last_name\"\n          type=\"text\"\n          required\n        ></input>\n        <input\n          onChange={handleChange}\n          value={userData.password}\n          placeholder=\"Create a password\"\n          name=\"password\"\n          type=\"password\"\n          required\n        ></input>\n        <button type=\"submit\">Sign Up</button>\n      </div>\n    </form>\n  );\n}\n\nexport default Registration;\n\n// form\n// username\n// first name\n// last name\n// password\n// submit button\n// nice to have -- form validation\n"]},"metadata":{},"sourceType":"module"}